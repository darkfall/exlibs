// ======================================================================================
// File         : FilterWidget.h
// Author       : Wu Jie 
// Last Change  : 03/31/2010 | 17:49:22 PM | Wednesday,March
// Description  : 
// ======================================================================================

// #################################################################################
#ifndef FILTERWIDGET_H_1270028969
#define FILTERWIDGET_H_1270028969
// #################################################################################

///////////////////////////////////////////////////////////////////////////////
// includes
///////////////////////////////////////////////////////////////////////////////

#include "ui_filterWidget.h"

///////////////////////////////////////////////////////////////////////////////
// defines
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// class IconButton 
// 
// Purpose: 
// 
///////////////////////////////////////////////////////////////////////////////

class IconButton: public QToolButton
{
    Q_OBJECT
    Q_PROPERTY(float fader READ fader WRITE setFader)
public:
    IconButton(QWidget *parent);
    void paintEvent(QPaintEvent *event);
    float fader() { return m_fader; }
    void setFader(float value) { m_fader = value; update(); }
    void animateShow(bool visible);

private:
    float m_fader;
};

///////////////////////////////////////////////////////////////////////////////
// class FilterWidget 
// 
// Purpose: 
// 
///////////////////////////////////////////////////////////////////////////////

class FilterWidget : public QWidget, private Ui::filterWidget
{
    Q_OBJECT

    ///////////////////////////////////////////////////////////////////////////////
    // public mebmer functions
    ///////////////////////////////////////////////////////////////////////////////

public:

    FilterWidget ( QWidget* _pParent = NULL );
    ~FilterWidget ();

    QString text() const;
    void setText( const QString & );
    void setHint ( const QString & );

    bool refuseFocus() const; // see HintLineEdit
    void setRefuseFocus(bool v);
    void resizeEvent(QResizeEvent *);

    ///////////////////////////////////////////////////////////////////////////////
    // signals
    ///////////////////////////////////////////////////////////////////////////////

signals:

    void filterChanged(const QString &);

    ///////////////////////////////////////////////////////////////////////////////
    // public slots
    ///////////////////////////////////////////////////////////////////////////////

public slots:

    void reset();

    ///////////////////////////////////////////////////////////////////////////////
    // protected slots
    ///////////////////////////////////////////////////////////////////////////////

protected slots:

    void checkButton(const QString &text);

    ///////////////////////////////////////////////////////////////////////////////
    // protected 
    ///////////////////////////////////////////////////////////////////////////////

protected:

    IconButton* m_resetButton;

}; // end class FilterWidget 

// #################################################################################
#endif // END FILTERWIDGET_H_1270028969
// #################################################################################
