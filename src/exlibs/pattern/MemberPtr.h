// ======================================================================================
// File         : MemberPtr.h
// Author       : Wu Jie 
// Last Change  : 08/18/2009 | 00:10:57 AM | Tuesday,August
// Description  : 
// ======================================================================================

// #################################################################################
#ifndef MEMBERPTR_H_1250525459
#define MEMBERPTR_H_1250525459
// #################################################################################

///////////////////////////////////////////////////////////////////////////////
// include
///////////////////////////////////////////////////////////////////////////////

// ######################### 
namespace ex { 
// ######################### 

///////////////////////////////////////////////////////////////////////////////
// class TMemberPtr 
// 
// Purpose: 
// 
///////////////////////////////////////////////////////////////////////////////

template < typename CLASS_T, typename MEMBER_T >
class TMemberPtr
{
    ///////////////////////////////////////////////////////////////////////////////
    // typedef
    ///////////////////////////////////////////////////////////////////////////////

public:

    typedef TMemberPtr<CLASS_T,MEMBER_T>    self_t;
    typedef CLASS_T*                        obj_ptr_t;             
    typedef MEMBER_T CLASS_T::*             member_ptr_t;             

    ///////////////////////////////////////////////////////////////////////////////
    // constructor & destructor
    ///////////////////////////////////////////////////////////////////////////////

public:

    //
    TMemberPtr ()
    {
        reset ();
    }

    TMemberPtr ( const char* _name, member_ptr_t _memberPtr )
        : m_name (_name)
        , m_memberPtr (_memberPtr)
    {
    }

    ///////////////////////////////////////////////////////////////////////////////
    // public member functions
    ///////////////////////////////////////////////////////////////////////////////

public:

    //
    void set ( const char* _name )
    {
        m_name.set (_name);
    }

    // 
    void reset ()
    {
        m_name.set (NULL);
        m_memberPtr = NULL;
    }

    //
    MEMBER_T& operator () ( const obj_ptr_t& _pObj ) { return _pObj->*m_memberPtr; }
    const MEMBER_T& operator () ( const obj_ptr_t& _pObj  ) const { return _pObj->*m_memberPtr; }

    ///////////////////////////////////////////////////////////////////////////////
    // protected member data
    ///////////////////////////////////////////////////////////////////////////////

protected:

    string_id_t     m_name;
    member_ptr_t    m_memberPtr;

}; // end class TMemberPtr

// ######################### 
} // end namespace ex 
// ######################### 

// #################################################################################
#endif // END MEMBERPTR_H_1250525459
// #################################################################################
