// ======================================================================================
// File         : intrinsics.h
// Author       : Wu Jie 
// Last Change  : 03/23/2010 | 18:48:14 PM | Tuesday,March
// Description  : 
// ======================================================================================

// #################################################################################
#ifndef INTRINSICS_H_1269341295
#define INTRINSICS_H_1269341295
// #################################################################################

// ######################### 
namespace ex { 
// ######################### 

///////////////////////////////////////////////////////////////////////////////
// intris
///////////////////////////////////////////////////////////////////////////////

// ######################### 
namespace intri { 
// ######################### 

///////////////////////////////////////////////////////////////////////////////
// SIMD Instrincs
///////////////////////////////////////////////////////////////////////////////

// ------------------------------------------------------------------
// Desc: cast
// ------------------------------------------------------------------

template <typename TO_T, typename FROM_T >
INLINE TO_T cast( const FROM_T& _from )
{
    return TO_T(_from);
}

// ------------------------------------------------------------------
// Desc: get
// ------------------------------------------------------------------

template < typename T, int COUNT >
INLINE T get( const T (&_pResult)[COUNT], int idx )
{
    ex_assert( idx >= 0 && idx < COUNT, "idx out of range" );
    return _pResult[idx]; 
}

// ------------------------------------------------------------------
// Desc: getref
// ------------------------------------------------------------------

template < typename T, int COUNT >
INLINE T& getref( T (&_pResult)[COUNT], int idx )
{
    ex_assert( idx >= 0 && idx < COUNT, "idx out of range" );
    return _pResult[idx]; 
}

///////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////


#if ( EX_PLATFORM == EX_WIN32 ) || ( EX_PLATFORM == EX_LINUX )
    #include "intri_sse.h"
#elif ( EX_PLATFORM == EX_XENON )
    #include "intri_xenon.h"
#elif ( EX_PLATFORM == EX_PS3 )
    #include "intri_ps3.h"
#endif

// ######################### 
} // end namespace intri 
// ######################### 

// ######################### 
} // end namespace ex 
// ######################### 

// #################################################################################
#endif // END INTRINSICS_H_1269341295
// #################################################################################


